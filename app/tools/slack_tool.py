from slack_sdk import WebClient
from slack_bolt.adapter.fastapi import SlackRequestHandler
from slack_bolt import App
import os

# Initialize the Slack Bolt app
slack_app = App(
    token=os.getenv("SLACK_TOKEN"), signing_secret=os.getenv("SLACK_SIGNING_SECRET")
)
handler = SlackRequestHandler(slack_app)


async def process_mention(event_data: dict, quesiton: str) -> None:
    """
    Process events with production-grade Redis deduplication.

    This function checks if an event has already been processed by using Redis
    to lock the event ID. If the event is a duplicate, it skips processing.
    If the event is unique, it processes the event, cleans up the text,
    and sends a response via Slack.

    Args:
        event_data (dict): The event data received from Slack, containing event details such as the event ID, text, and channel.

    Returns:
        None: This function does not return any value, it only performs side effects (logging, sending messages).
    """

    try:
        print(f"Processing event: {event_data}")
        text = event_data["event"]["text"]  # Get the text from the event data
        SLACK_BOT_USER_ID = os.getenv("SLACK_BOT_USER_ID")
        print(f"SLACK_BOT_USER_ID: {SLACK_BOT_USER_ID}")
        mention = f"<@{SLACK_BOT_USER_ID}>"  # Format the bot mention
        cleaned_text = text.replace(
            mention, ""
        ).strip()  # Remove the mention from the text

        print(f"Processing mention: {cleaned_text}")
        # response = agent????.run(
        #     cleaned_text
        # ).content  # Process the cleaned text with the bot
        response = "hello"

        # Use WebClient to send the response via Slack
        slack_client = WebClient(token=os.getenv("SLACK_TOKEN"))
        slack_client.chat_postMessage(
            channel=event_data["event"]["channel"],  # The Slack channel
            text=response,  # The response generated by the bot
        )
    except Exception as e:
        # Log any errors that occur during processing
        print(f"Error processing slack bot mention: {e}")